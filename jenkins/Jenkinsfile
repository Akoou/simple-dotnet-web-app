pipeline {
  agent {
    kubernetes {
      yaml """
apiVersion: v1
kind: Pod
spec:
  containers:
  - name: dotnet
    image: mcr.microsoft.com/dotnet/sdk:8.0
    command: [cat]
    tty: true
  - name: docker
    image: docker:24.0-cli
    command: [cat]
    tty: true
"""
    }
  }

  environment {
    IMAGE_NAME = "registry.somepharm.local/SimpleWebApi:${BUILD_NUMBER}"
  }

  stages {
    stage('Build') {
      steps {
        container('dotnet') {
          sh 'dotnet restore'
          sh 'dotnet build'
        }
      }
    }

    stage('Test') {
      steps {
        container('dotnet') {
          sh 'dotnet test --no-build --no-restore --collect:"XPlat Code Coverage"'
        }
      }
      post {
        always {
          recordCoverage(tools: [[parser: 'COBERTURA', pattern: '**/*.xml']], sourceDirectories: [[path: 'SimpleWebApi.Test/TestResults']])
        }
      }
    }

    stage('Publish') {
      steps {
        container('dotnet') {
          sh 'dotnet publish SimpleWebApi --no-restore -o published'
        }
      }
      post {
        success {
          archiveArtifacts 'published/*.*'
        }
      }
    }

    stage('Build and Push Docker Image') {
      steps {
        container('docker') {
          sh """
          echo "FROM mcr.microsoft.com/dotnet/aspnet:8.0 AS base" > Dockerfile
          echo "WORKDIR /app" >> Dockerfile
          echo "COPY published/ ./" >> Dockerfile

          docker build -t $IMAGE_NAME .
          docker push $IMAGE_NAME
          """
        }
      }
    }
  }
}
