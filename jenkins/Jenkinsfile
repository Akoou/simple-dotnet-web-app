pipeline { 
    agent {
        kubernetes {
            yaml """
apiVersion: v1
kind: Pod
spec:
  containers:
  - name: dotnet
    image: mcr.microsoft.com/dotnet/sdk:8.0
    command:
    - cat
    tty: true
"""
        }
    }
    environment {
        IMAGE_NAME = "registry.somepharm.local/SimpleWebApi:${BUILD_NUMBER}"
        KUBE_CONFIG = credentials('kubeconfig-credential-id') // replace with your actual Jenkins credential ID
    }
    stages {
        stage('Build') {
            steps {
                container('dotnet') {
                    sh 'dotnet --version'
                    sh 'dotnet restore'
                    sh 'dotnet build'
                }
            }
        }
        stage('Test') { 
            steps {
                container('dotnet') {
                    sh 'dotnet test --no-build --no-restore --collect:"XPlat Code Coverage"'
                }
            }

            post {
                always {
                    recordCoverage(tools: [[parser: 'COBERTURA', pattern: '**/*.xml']], sourceDirectories: [[path: 'SimpleWebApi.Test/TestResults']])
                }
            }
        }
        stage('Deliver') { 
            steps {
                container('dotnet') {
                    sh 'dotnet publish SimpleWebApi --no-restore -o published' 
                }
            }
            post {
                success {
                    archiveArtifacts 'published/*.*'
                }
            }
        }
        stage('Build and Push Docker Image') {
            steps {
                container('dotnet') {
                    sh """
                    echo "FROM mcr.microsoft.com/dotnet/aspnet:8.0 AS base" > Dockerfile
                    echo "WORKDIR /app" >> Dockerfile
                    echo "COPY published/ ./" >> Dockerfile

                    ddocker build -t $IMAGE_NAME .
                    docker push $IMAGE_NAME
                    """
                }
            }
        }
    }
}
